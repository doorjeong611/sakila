<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sakila.mapper.InventoryMapper">
	
	<!-- /on/removeFilm - selectCountInventoryByFilm: 특정 film의 재고가 존재하는지 -->
	<select id="selectCountInventoryByFilm" parameterType="Integer" resultType="Integer">
		SELECT COUNT(*)
		FROM inventory
		WHERE film_id = #{filmId}
	</select>
	
	
	<!-- /on/inventoryList : film * rental * payment * ... * customer -->
	<select id="selectInventroyListByStore" parameterType="Map" resultType="Map">
		SELECT t1.inventory_id inventoryId
				, t1.film_id filmId
				, t1.title title
				, t1.last_update lastUpdate
				, t2.customer_id customerId
				, ifnull(t2.rental_date,'대여가능') rentalDate
		FROM 
				(SELECT i.inventory_id 
						  , i.film_id 
						  , f.title 
						  , i.last_update 
						  , i.store_id 
				FROM inventory i INNER JOIN film f
				ON i.film_id = f.film_id)t1
		LEFT OUTER JOIN 
				(SELECT i.inventory_id, t.customer_id , t.rental_date
				FROM inventory i LEFT OUTER JOIN (SELECT inventory_id
														, customer_id 
														, rental_date
												 FROM rental
												 WHERE return_date IS NULL)t
				ON i.inventory_id = t.inventory_id)t2
		ON t1.inventory_id = t2.inventory_id
		WHERE t1.store_id = #{storeId}	
		ORDER BY t1.inventory_id DESC
		LIMIT #{beginRow} , #{rowPerPage}	
	</select>
	
	<!-- /on/inventoryList : page -->
	<select id="selectTotalCountByInventoryList">
		SELECT COUNT(*)
		FROM inventory i INNER JOIN film f
		ON i.film_id = f.film_id
		WHERE i.store_id = #{storeId}
	</select>
	
	<!-- on/addInventroy -->
	<insert id="insertInventory" parameterType="com.example.sakila.vo.Inventory">
		INSERT INTO inventory(film_id, store_id)
		VALUES(#{filmId}, #{storeId} )
	</insert>
	
	<!-- on/removeInventoryByKey -->
	<delete id="deleteInventoryByKey" parameterType="Integer">
		DELETE FROM inventory
		WHERE inventory_id = #{inventoryId}
	</delete>
	
</mapper>